/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page index-qtlocation-module.html
\title Qt Location Module
\brief The Qt Location API provides location positioning, mapping, navigation,
       and place search services via QML and C++ interfaces.
\ingroup technology-apis

The Qt Location API provides location positioning, mapping, navigation, and
place search services via QML and C++ interfaces.

\section1 Overview

Qt Location is split into three core sub-modules, which each have QML and C++
APIs.

\section3 Positioning
Positioning includes all the functionality necessary to find and work with geographic
coordinates, including working out the user's current position on the Earth's surface
using GPS, GLONASS, or other available services.
\table
\row
    \li Positioning introduction and overview:
    \li \l{Positioning (QML)}{for QML}
    \li \l{Qt Location C++ API}{for C++}
\endtable

\section3 Places
Places is
the natural complement to Positioning, providing a source of geographic
data about places of interest (POIs). As well as providing the location,
size and other vitals about a POI, the Places API can also retrieve images,
reviews and other rich content, and integrate with platform sources of
a user's favorites.
\table
\row
    \li Places introduction and overview:
    \li \l{QML Places API}{for QML}
    \li \l{Places (C++)}{for C++}
\endtable

\section3 Maps and Navigation
Maps and Navigation provides QtQuick user
interface components for displaying geographic information on a map, as
well as allowing user interaction with map objects and the display itself.
It also contains utilities for geocoding (finding a geographic coordinate
from a street address) and navigation (including driving and walking
directions).
\table
\row
    \li Maps and Navigation introduction and overview:
    \li \l{Maps and Navigation (QML)}{for QML}
    \li \l{Maps and Navigation (C++)}{for C++}
\endtable


\section1 API References and Examples

Alphabetized lists of all classes and elements in the API, as well as detailed
example applications to demonstrate their usage.

\table
    \row
        \li \l {Qt Location 5.x}{QML API Reference}
        \li Full list of QML elements in the Qt Location API
    \row
        \li \l {Qt Location C++ API}{C++ API Reference}
        \li Full list of C++ classes and methods in the Qt Location API
    \row
        \li \l {Qt Location Examples}{Example Apps}
        \li Examples demonstrating use of the Qt Location APIs
\endtable

\section1 Plugin References and Parameters

Information about plugins, important notes on their usage, parameters that can
be provided to influence their behavior.

\annotatedlist QtLocation-plugins

\section1 Porting and Implementing New Back-Ends

For systems integrators and distributors, information relating to making
Qt Location available for a new platform.

\table
    \row
        \li \l {Qt Location GeoServices}{GeoServices}
        \li Information about the Qt Location GeoServices plugins
    \row
        \li \l {Places Backend} {Places}
        \li Information for \l {Places Backend} Implementors
\endtable
*/
