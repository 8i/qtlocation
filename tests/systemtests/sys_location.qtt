/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/location

testcase = {

    // \groups BAT,1.1,MOBILITY-65
    current_position: function()
    {
        prompt(twiki('---+++ Position is detected
        Note that GPS connection is required for this test case
    | *Step* | *Verification* |
    | Run the weatherinfo_with_location example | Verify that weather information for your local area is displayed |'
        ));
    },

    // \groups BAT,1.1,MOBILITY-65
    location_is_updated: function()
    {
        prompt(twiki('---+++ Position changes are detected
        Note that GPS and internet connection is required for this test case.
    | *Step* | *Verification* |
    | Run the lightmaps_with_location app (sources are in qtbase/examples/embedded/lightmaps). | Verify that map is displayed and centered with the current position |
    | Move to a different location | Verify that map is updated and centered with new location |'
       ));
    },

    // \groups BAT,1.2,QTMOBILITY-873
    third_party_position_source: function()
    {
        prompt(twiki('---+++ Position is detected via cusom plugin
    Note that GPS and internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the testQtLocation application (this is part of BlueWeel project, sources are in git@scm.dev.nokia.troll.no:qtmobility/qtmobility-tests.git | |
    | Select the Custom Service | Verify that no "Unable to register location service" and "Not valid interface." messages appear |
    | Press the Update Map button | Verify that map was loaded and correct current position is displayed |'
        ));
    },

    //Note that significand precision should be taken into account during comparing real numbers, that is why we consider 5.48417e-16 value equal to zero
    // \groups BAT,1.2,QTMOBILITY-658
    shift_to_the_given_offset: function()
    {
        prompt(twiki('---+++ New coordinats are calculated
    | *Step* | *Verification* |
    | Run the testQtLocation application | |
    | Select the MapNavigation | |
    | Fill in 0 in to Start Latitude field | |
    | Fill in *100* in to Start Longitude field | |
    | Select Distance/Bearing from pre-defined dropdown list | |
    | Fill *1000000, 90* in to the given field | |
    | Press the Ok button | Verify that Destination fields are updated with *5.48417e-16* latitude and *108.9932* longitude |
    | Fill in *60* in to Start Latitude field | |
    | Fill in *100* in to Start Longitude field | |
    | Select Distance/Bearing from pre-defined dropdown list | |
    | Fill *1000000, 180* in to the given field | |
    | Press the Ok button | Verify that Destination fields are updated with *51.0068* latitude and *100* longitude |
    | Fill in *60* in to Start Latitude field | |
    | Fill in *100* in to Start Longitude field | |
    | Select Distance/Bearing from pre-defined dropdown list | |
    | Fill *1000000, 20* in to the given field | |
    | Press the Ok button | Verify that Destination fields are updated with *68.2523* latitude and *108.296* longitude |'
        ));
    },


    // Maps and Navigation
    // \groups BAT,1.1,MOBILITY-538
    select_service_provider: function()
    {
        startApplication("geoservicedemo");
        select("Service Providers");
        select("nokia");
        select("Set Service Provider");
        prompt("Verify selected service provider is indicated as current service provider");
    },

    request_route_from_one_GPS_location_to_another_data: {
        route:["-27.575", "153.088", "-27.465", "153.023", "15901", "15987"]
    },

    // \groups BAT,1.1,MOBILITY-538
    request_route_from_one_GPS_location_to_another: function(lat1, long1, lat2, long2, distance1, distance2)
    {
        startApplication("geoservicedemo");
        select("Service Providers");
        select("nokia");
        select("Set Service Provider");
        select("Route");
        select("Request Route");
        enter(lat1);
        enter(long1);
        enter(lat2);
        enter(long2);
        select("Ok");
        prompt(twiki("Wait until the route is calculated (should be less than 10 seconds)"));
        prompt(twiki("Verify the there are 8 segments, first and last instructions indicate to 'Head toward Logan rd' and 'Turn right onto Bartley St'"));
        select("routes/route");
        compare(getText("distance"), distance1);
        select("Request Route");
        enter(lat2);
        enter(long2);
        enter(lat1);
        enter(long1);
        select("Ok");
        prompt(twiki('Wait until the route is calculated (should be less than 10 seconds)'));
        prompt(twiki('Verify the instructions for segments 1 and 2 indicate to Head towards Sedgebrook st and Turn right onto Sedgebrook st'));
        compare(getText("distance"), distance2);
    },

    // \groups BAT,1.1,MOBILITY-538
    geocoding: function()
    {
        prompt(twiki('---+++ Geocoding
    Note that testing via proxy is not recommended, incorrect settings can be a cause of the " Socket operation timed out" error
    | *Step* | *Verification* |
    | Run the GeoServiceDemo application (sources are /tests/location-testing-tools/geoservicedemo) | |
    | Select Search By Adress tab | |
    | Select One-box Search checkbox | |
    | Fill in *Brandl st, Eight Mile Plains, Australia* in search field | |
    | Select Geocoding search | |
    | Press Ok button | |
    | Wait until data is recieved | |
    | Select places | Verify that count = 1 |
    | Select place | Verify that latitude is *-27.5798*, longitude is *153.1* |
    | Select address | Verify that Country is *AUSTRALIA*, country code is *AUS*, city is *Eight Mile Plains*, street name is *Branl St*, post code is *4113* |'
        ));

    },

    // \groups BAT,1.1,MOBILITY-538
    reverse_geocoding: function()
    {
        prompt(twiki('---+++ Reverse geocoding
    Note that testing via proxy is not recommended, incorrect settings can be a cause of the " Socket operation timed out" error
    | *Step* | *Verification* |
    | Run the GeoServiceDemo application | |
    | Select Reverse Geocoding tab | |
    | Press Search By Coordinates button | |
    | Fill in *-27.5798* in Latitude field | |
    | Fill in *153.1* in Longitude field | |
    | Press Ok button | |
    | Wait until data is recieved | |
    | Select places/place/adress | Verify that Country is *AUSTRALIA*, country code is *AUS*, city is *Eight Mile Plains*, street name is *54 Branl St*, post code is *4113* |'
        ));
   },

    // \groups BAT,1.1,MOBILITY-538
    displaying_a_map: function()
    {
        prompt(twiki('---+++ Different views are displayed
    Note that  internet connection is required for this test case.
    | *Step* | *Verification* |
    | Run the mapsdemo application (sources are /examples/mapsdemo) | Map for current location is displayed on the screen |'
        ));
    },

    // \groups BAT,1.1,MOBILITY-538
    different_map_types: function()
    {
        prompt(twiki('---+++ Different views are displayed
    Note that  internet connection is required for this test case.
    Note that Nokia map engine supports only Street, Satellite and Terrain map types
    | *Step* | *Verification* |
    | Run the MapViewer application (sources are /tests/location-testing-tools/mapviewer) | Map for current location is displayed on the screen |
    | Press Option button | |
    | Press Street button (if button is enabled) | Map is drawn in Street view |
    | Press Option button | |
    | Press Satellite button (if button is enabled) | Map is drawn in Satellite view |
    | Press Option button | |
    | Press Terrain button (if button is enabled) | Map is drawn in Satellite view |'
        ));
    },

    // \groups BAT,1.1,MOBILITY-538
    zooming_support:function()
    {
        prompt(twiki('---+++ Map is zoomed in and out
    Note that internet connection is required for this test case.
    | *Step* | *Verification* |
    | Run the mapsdemo application | Map is displayed on the screen |
    | Press - button | Map is zoomed out correctly |
    | Press + button | Map is zoomed in correctly |'
        ));
    },

    // \groups BAT,1.1,MOBILITY-538
    capturing_coordinates:function()
    {
        prompt(twiki('---+++ Coordinates are captured
    Note that internet connection is required for this test case.
    | *Step* | *Verification* |
    | Run the MapViewer application | Map is displayed on the screen |
    | Navigate and/or zoom in the map to see Brisbane | |
    | Right mouse click on the square which represents *Brisbane* | |
    | Select Coordinates menu item | |
    | Select Capture menu item | Verify that dialog with coordinates appears on the screen. Latitude is *about -27.46*, longitude is *about 153.02* |'
        ));
    },

    // \groups BAT,1.2,QTMOBILITY-757,QTMOBILITY-701
    pixmap_object_zooming: function()
    {
        prompt(twiki('---+++ Pixmap object is not scaled during zooming
    Note that GPS and internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the testQtLocation application | |
    | Select the MapNavigation | |
    | Go to Map tab | Verify that map is loaded for current position |
    | Swith to MapObject mode | |
    | Tap on the screen to create pixmap object | Verify that blue square appears on the screen in place of touch |
    | Switch to Pan/Zoom mode | |
    | Increase zoom level | Verify that the blue square is not scaled |
    | Decrease zoom level | Verify that the blue square is not scaled |'
        ));
    },

    request_address_for_given_coordinate_with_reverse_geocoding: function()
    {
        skip( "Nothing tested", SkipAll );
    },

    // \groups BAT,1.2,QTMOBILITY-796
    qml_display_map: function()
    {
        prompt(twiki('---+++ QML: Map is displayed
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application (sources are in examples/declarative/mapviewer) | Verify that map is loaded in Street view with the center next to Brisbane |
    | Press Settings button | |
    | Press Map Type | |
    | Select Satelite view | Verify that map is displayed in satellite view |
    | Press Settings button | |
    | Press Map Type | |
    | Select Terrain view | Verify that map is displayed in terrain view |'
        ));
    },

    // \groups BAT,1.2,QTMOBILITY-796
    qml_zoom_a_map: function()
    {
        prompt(twiki('---+++ QML: Zoom in and out the map
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | Verify that map is loaded with the center next to Brisbane |
    | Move slider to the right | Verify that map is zoomed in |
    | Move slider to the left | Verify that map is zoomed out |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2893,RESEARCH
    qml_route_for_two_close_points: function()
    {
        prompt(twiki('---+++ QML: Route for two close points
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Route menu item | |
    | Make sure that coordinates are *(-27.575,153.088)->(-27.465,153.023)* | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *15.9km* |
    | Click on the catch | |
    | Press Options button | |
    | Select Route menu item | |
    | Select second option group to enter start and end points as address | |
    | Use default addresses and Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *19.6km* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2893,RESEARCH
    qml_route_for_two_distant_points: function()
    {
        prompt(twiki('---+++ QML: Route for two distant points
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Route menu item | |
    | Selec coordinate option group | |
    | Fill in *-27.4709* in From Latitude field | |
    | Fill in *153.0235* in From Longitude filed | |
    | Fill in *-33.8689* in To Latitude field | |
    | Fill in *151.2071* in To Longitude filed | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *930km* |
    | Click on the catch | |
    | Press Options button | |
    | Select Route menu item | |
    | Selec second option group | |
    | Press Clear button | |
    | Fill in *Eight Mile Plains* in From City field | |
    | Fill in *Australia* in From Country filed | |
    | Fill in *Moscow* in To City filed | |
    | Fill in *Australia* in To Country filed | |
    | Press Go button | |
    | Wait for message appears on the screen | Verify that route is not found |
    | Press Ok button | |
    | Press Options button | |
    | Select Route menu item | |
    | Selec second option group | |
    | Fill in *Byron Bay* in To City filed | |
    | Fill in *Australia* in To Country filed | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *151km* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2893,RESEARCH
    qml_route_for_multiple_points: function()
    {
        prompt(twiki('---+++ QML: Route for multiple waypoints
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Long press on the map | |
    | Press Set Marker menu item | |
    | Create another Marker via Long Press | |
    | Create third Marker | |
    | Long Press on the first marker | |
    | Select Move To menu item | |
    | Fill in *-27.575* in Latitude filed | |
    | Fill in *153.088* in Longitude | |
    | Press Go! button | |
    | Long Press on the second marker | |
    | Select Move To menu item | |
    | Fill in *-27.465* in Latitude filed | |
    | Fill in *153.023* in Longitude | |
    | Press Go! button | |
    | Long Press on the third marker | |
    | Select Move To menu item | |
    | Fill in *-27.3614* in Latitude filed | |
    | Fill in *153.0043* in Longitude | |
    | Press Go! button | |
    | Long Press on the first marker | |
    | Select Route To The Next Points | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *29.5km* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2893,RESEARCH
    qml_travel_mode: function()
    {
        prompt(twiki('---+++ QML: Travel modes: Vechile Fastest and Pedestrian Fastest
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Route menu item | |
    | Selec first option group | |
    | Fill in *-27.5789* in From Latitude field | |
    | Fill in *153.0919* in From Longitude filed | |
    | Fill in *-27.5792* in To Latitude field | |
    | Fill in *153.096* in To Longitude filed | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *2.6km* |
    | Click on the catch | |
    | Press Options button | |
    | Select Route menu item | |
    | Select *Pedestrian* option button | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *1.7km* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2893,RESEARCH
    qml_route_feature_type: function()
    {
        prompt(twiki('---+++ QML: Route features: Avoid Highways and Avoid Tool Roads
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Route menu item | |
    | Selec first option group | |
    | Fill in *-27.5013* in From Latitude field | |
    | Fill in *153.1002* in From Longitude filed | |
    | Fill in *-27.4395* in To Latitude field | |
    | Fill in *153.0504* in To Longitude filed | |
    | Select *Avoid toll roads* checkbox | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *18km* |
    | Click on the catch | |
    | Press Options button | |
    | Select *Avoid highways* checkbox | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *15km* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2893,RESEARCH
    qml_route_optimization: function()
    {
        prompt(twiki('---+++ QML: Travel optimization: Vechile Shortest
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Route menu item | |
    | Selec first option group | |
    | Fill in *-27.5789* in From Latitude field | |
    | Fill in *153.0919* in From Longitude filed | |
    | Fill in *-27.5792* in To Latitude field | |
    | Fill in *153.096* in To Longitude filed | |
    | Select *Shortest* option button | |
    | Press Go button | |
    | Wait for the route appears on the screen | Verify that the route looks correct and does not have strange loops |
    | Click on the catch on the left side of the screen | Verify that distance is *2.2km* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_australian_location: function()
    {
        prompt(twiki('---+++ QML: Geocode australian location
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *Brandl st* in Street filed | |
    | Fill in *Eight Mile Plains* in City field | |
    | Fill in *Australia* in Country field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode was successful with latitude *-27.5798*, longitude *153.1* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_russian_location: function()
    {
        prompt(twiki('---+++ QML: Geocode russian location
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *Minina I Pozharskogo Ploshchad* in Street filed | |
    | Fill in *Nizhniy Novgorod* in City field | |
    | Fill in *Russia* in Country field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode was successful with latitude *56.3294*, longitude *44.0089* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_fictional_location: function()
    {
        prompt(twiki('---+++ QML: Geocode a fictional location
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *The Best City* in City field | |
    | Fill in *Australia* in Country field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that location is not found |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_not_unique_location: function()
    {
        prompt(twiki('---+++ QML: Geocode not unique location
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *Moscow* in City field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that several results were found |
    | Press Ok button |
    | Press Options button | |
    | Select Geocode menu item | |
    | Fill in *USA* in Country field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that *19* points were found |
    | Press Ok button |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *Moscow* in City filed | |
    | Fill in *Russia* in Country field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode was successful with latitude *55.7569*, longitude *37.615* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_popular_request: function()
    {
        prompt(twiki('---+++ QML: Geocode a popular request
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *53 Brandl st* in Street filed | |
    | Fill in *Eight Mile Plains* in City field | |
    | Fill in *QLD* in State field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode was successful |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_request_with_district: function()
    {
        prompt(twiki('---+++ QML: Geocode district
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *Nizhniy Novgorod* in City filed | |
    | Fill in *Russia* in Country field | |
    | Fill in *Nizhegorodskiy Rayon* in District field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode was successful with latitude *56.3217*, longitude *44.0331* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_request_with_county: function()
    {
        prompt(twiki('---+++ QML: Geocode county
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *Norfolk* in County filed | |
    | Fill in *United Kingdom* in Country field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode was successful with latitude *52.614*, longitude *0.8864* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_request_with_country_code: function()
    {
        prompt(twiki('---+++ QML: Geocode country code
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Clear All button | |
    | Fill in *AUS* in Country code field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode is successful |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2900,RESEARCH
    qml_geocode_request_with_post_code: function()
    {
        prompt(twiki('---+++ QML: Geocode post code
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Geocode menu item | |
    | Press Clear All button | |
    | Fill in *Brandl st* in Street filed | |
    | Fill in *4113* in Post Code field | |
    | Fill in *Australia* in Country field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that geocode is successful with latitude *-27.5798*, longitude *153.1* |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2901,RESEARCH
    qml_reverse_geocode_australian_place: function()
    {
        prompt(twiki('---+++ QML: Reverse geocode of an australian place
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Reverse Geocode | |
    | Fill in *-27.575* in Latitude filed | |
    | Fill in *153.088* in Longitude field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that reverse geocode issuccessful (street: *230 Padstow Rd*, City: *Eight Mile Plains*, State: *AUS-QLD*, Country code: *AUS*, Country: *AUSTRALIA*, Postcode: *4113*) |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2901,RESEARCH
    qml_reverse_geocode_russian_place: function()
    {
        prompt(twiki('---+++ QML: Reverse geocode of a russian place
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Reverse Geocode | |
    | Fill in *56.3264* in Latitude filed | |
    | Fill in *44.0048* in Longitude field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that reverse geocode issuccessful (street: *Minina I Pozharskogo Ploshchad\'*, district: *Nizhegorodskiy Rayon*, City: *Nizhniy Novgorod*, Country code: *RUS*, Country: *Russian Federation*, Postcode: *603005*) |'
        ));
    },

    // \groups BAT,5.0,MOBILITY-2901,RESEARCH
    qml_reverse_geocode_uninhabited_place: function()
    {
        prompt(twiki('---+++ QML: Reverse geocode of uninhabited place
    Note that internet connection is required for this test case
    | *Step* | *Verification* |
    | Run the qml_mapviewer application | |
    | Press Options button | |
    | Select Reverse Geocode | |
    | Fill in *-26.8890* in Latitude filed | |
    | Fill in *154.6696* in Longitude field | |
    | Press Go! button | |
    | Wait for message appears on the screen | Verify that location is not found |'
        ));
/*    },

/*

----Maps And Navigation use cases

    list_of_way_points: function() {    },

    distinguish_pedestrian_and_car_navigation: function() {    },

    provide_map_for_given_coordinate: function() {    },

    online_and_offline: function() {    }

*/
